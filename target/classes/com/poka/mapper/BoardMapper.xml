<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.poka.mapper.BoardMapper">

	<resultMap type="com.poka.domain.BoardVO" id="boardMap">
		<result property="bno" 		column="bno"/>
		<result property="user.grade.grade_img" column="grade_img"/>
		<result property="title" 		column="title"/>
		<result property="content" 	column="content"/>
		<result property="writer" 		column="writer"/>
		<result property="regDate" 		column="regdate"/>
		<result property="updateDate" 		column="updatedate"/>
		<result property="reportStatus" 		column="reportstatus"/>
	</resultMap>



	<select id="getTotalCount" resultType="int">
        SELECT 	COUNT(*) FROM p_board
        WHERE  	bno IS NOT NULL
    </select>

	<select id="getListWithPaging" 
	        resultMap="boardMap"> 
	<![CDATA[  
        SELECT *  
        FROM   ( SELECT 
        				rownum rn, g.grade_img, b.bno, b.title, b.content, b.writer,  
        				b.regDate, b.updateDate, nvl((select distinct status from p_report where bno  = b.bno),0) as reportstatus
        		 FROM   p_board b
        		 LEFT OUTER JOIN p_member m
        		 ON b.writer = m.user_id
        		 LEFT OUTER JOIN p_grade g
        		 ON m.gradecode = g.grade_code
        		 WHERE	rownum <= (#{pageNum} * #{amount}))
        WHERE  rn > (#{pageNum} - 1) * #{amount}
        ORDER BY bno DESC
    ]]>    
    </select>
     
	<select id="getList" 
	        resultType="com.poka.domain.BoardVO">
	<![CDATA[
        SELECT * FROM p_board WHERE bno IS NOT NULL ORDER BY bno DESC
    ]]>
    </select>
    
	<update id="update">
		UPDATE p_board
		SET    title = #{title},   content = #{content},
		       writer = #{writer}, updateDate = SYSDATE
		WHERE  bno = #{bno}
    </update>
    
	<delete id="delete">
		DELETE p_board WHERE bno = #{bno}
	</delete>

	<select id="read" resultType="com.poka.domain.BoardVO">
        SELECT * FROM p_board WHERE bno = #{bno}
    </select>

	<insert id="insertSelectKey">
		<selectKey keyProperty="bno" order="BEFORE" resultType="String">
			SELECT 'B'||seq_board.NEXTVAL FROM dual
		</selectKey>
	
		INSERT INTO p_board(bno, title, content, writer)
		VALUES(#{bno}, #{title}, #{content}, #{writer} )
    </insert>
    
	<insert id="insert">
		INSERT INTO p_board(bno, title, content, writer)
		VALUES('B'||seq_board.NEXTVAL, #{title}, #{content}, #{writer} )
    </insert>
    
</mapper>







